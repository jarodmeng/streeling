left_join(my_movies, by = c("id" = "video"))
?read_html
read_html
methods("read_html")
read_html.default
getAnywhere("read_html.default")
readr_xml
read_xml
xml2::read_xml
methods(read_xml)
library(xml2)
methods(read_xml)
read_xml.character
getAnywhere("read_xml.character")
?path_to_connection
??path_to_connection
xml2:::path_to_connection
getAnywhere("read_xml.character")
getAnywhere("read_xml.connection")
httr::set_config(httr::user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"))
se <- html_session( "https://httpbin.org/user-agent" )
se$response$request$options$useragent
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
con
class(con)
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
Q
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
getAnywhere("read_xml.connection")
getAnywhere("
read_xml.character")
getAnywhere("read_xml.character")
getAnywhere("path_to_connection")
xml2:::path_to_connection("https://javdb.com/actors/wzee")
packageVersion("xml2")
read_html
read_html
?read_html
x <- read_html("https://javdb.com/actors/wzee")
x
x <- read_html("https://javdb.com/actors/wzee", user_agent = "Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36")
x <- GET("https://javdb.com/actors/wzee", user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"))
x
x <- GET("https://javdb.com/actors/wzee")
x
pkg_install("RCrawler")
pkg_install("Rcrawler")
library(Rcrawler)
Rcrawler(Website = "http://www.glofile.com", no_cores = 4, no_conn = 4)
Rcrawler(Website = "https://javdb.com/actors/wzee", no_cores = 4, no_conn = 4)
download.file("https://javdb.com/actors/wzee", destfile = "test.html", quiet=T)
download.file("http://javdb.com/actors/wzee", destfile = "test.html", quiet=T)
download.file("http://javdb.com", destfile = "test.html", quiet=T)
download.file("http://www.javdb.com", destfile = "test.html", quiet=T)
data("Vocab")
brief(Vocab)
car::scatterplot(vocabulary ~ education, data = Vocab)
car::scatterplot(
vocabulary ~ education,
data = Vocab,
jitter = list(x = 2, y = 2),
cex = 0.01, col = "darkgray",
smooth = list(span = 1/3, col.smooth = "black", col.var = "black"),
regLine = list(col = "black")
)
car::Boxplot(vocabulary ~ education, data = Vocab, id = FALSE)
?use_proxy
GET("https://javdb.com/actors/prXZ", use_proxy("socks5://localhost:9050"))
?GET
GET("https://javdb.com/actors/prXZ", use_proxy("socks5://localhost:9050"), user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"), verbose())
GET("https://javdb.com/actors/prXZ", use_proxy("socks5://localhost:9050"), user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"), verbose()) -> x
print(x)
response(x)
class(x)
content(x)
content(x)[1]
content(x)[2]
names(content(x))
content(x)$node
xx <- content(x)
print(xx)
names(xx)
xx$doc
class(xx)
print(xx)
print(xx)[1]
GET("https://httpbin.org/get", use_proxy("socks5://localhost:9050"))
library(tidyverse)
library(googlesheets4)
library(lubridate)
library(rvest)
library(httr)
library(magrittr)
main_folder <- "/Volumes/Element 1/jav/JAV_output"
folders <- list.files(main_folder)
get_videos <- function(f) {
tibble(
actress = f,
video = tools::file_path_sans_ext(
list.files(file.path(main_folder, f), pattern = "nfo")
)
)
}
my_movies <- map_dfr(folders, get_videos)
my_movies %<>%
mutate(has_subtitle = str_detect(video, "-[cC]")) %>%
mutate(video = str_replace_all(video, "-[cC]", ""))
my_movies <- separate_rows(my_movies, actress, sep = ",")
nrow(my_movies)
my_movies %>% count(actress) %>% arrange(desc(n)) %>% print(n=100)
get_page_movies <- function(id, page = 1) {
main_page <- paste0("https://javdb.com/actors/", id)
param_sdc <- "t=s,d,c"
if (page == 1) {
url <- paste0(main_page, "?", param_sdc)
} else {
url <- paste0(main_page, "?page=", page, "&", param_sdc)
}
res <- read_html(url)
has_next <- res %>%
html_nodes(".pagination-list") %>%
html_nodes("a[rel=next]") %>%
length() %>%
{. > 0}
actor_name <- res %>% html_nodes(".actor-section-name") %>% html_text()
movies <- res %>%
html_nodes(".column.grid-item")
dat <- tibble(
actress = actor_name,
id = html_text(html_nodes(movies, ".uid")),
date = ymd(str_trim(html_text(html_nodes(movies, ".meta")))),
title = html_text(html_nodes(movies, ".video-title"))
)
if (has_next) {
dat <- bind_rows(
dat,
get_page_movies(id, page + 1)
)
}
dat %>% separate_rows(actress, sep = ", ")
}
db <- tribble(
~actor_id, ~actor_name,
"Av2e", "三上悠亜",
"wm9B", "明日花キララ",
"A5yq", "葵つかさ",
"RJM8", "橋本ありな",
"MqQQ", "かすみ果穂",
"gwE", "桃谷エリカ",
"QNen", "岬ななみ",
"qPer", "林ゆな",
"N4YG", "天海つばさ",
"96AR", "君島みお",
"DNb3", "坂口みほの",
"kzx6", "楓カレン",
"x4MV", "高橋しょう子",
"5Xx6", "吉川あいみ",
"Ewa2", "七ツ森りり",
"dENv", "友田彩也香",
"Y8Mx", "古川いおり"
)
httr::set_config(httr::user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"))
actor_movies <- db$actor_id %>%
map_dfr(get_page_movies) %>%
left_join(my_movies, by = c("id" = "video"))
GET("https://www.javbus.com/IPX-477")
read_html("https://www.javbus.com/IPX-477")
res <- .Last.value
res
res <- real_html("https://www.javbus.com/star/ra6")
res <- read_html("https://www.javbus.com/star/ra6")
res
res %>% html_nodes("date")
res <- read_html("https://www.javbus.com/star/1ny")
res %>% html_nodes("date")
res %>% html_nodes("a[rel=next]")
res %>% html_nodes("a[rel=next]")
res %>% html_nodes("a.next")
res %>% html_nodes("a#next")
has_next <- res %>%
html_nodes("a#next") %>%
length() %>%
{. > 0}
has_next
actor_name <- res %>% html_nodes("div.photo-info") %>% html_nodes("span.pb10") %>% html_text()
actor_name
movies <- res %>%
html_nodes("date")
movies
class(movies)
length(movies)
movies[1]
movies[c(1,3)]
seq(1,60,2)
movies_and_dates <- res %>%
html_nodes("date")
movies <- movies_and_dates[seq(1, length(movies_and_dates), 2)]
length(movies)
movies
movies <- movies_and_dates[seq(1, length(movies_and_dates), 2)] %>%
html_text()
movies
dates <- movies_and_dates[seq(2, length(movies_and_dates), 2)] %>%
html_text()
dates
get_page_movies <- function(id, page = 1) {
main_page <- paste0("https://www.javbus.com/star/", "1ny")
if (page == 1) {
url <- main_page
} else {
url <- paste0(main_page, "/", page)
}
res <- read_html(url)
has_next <- res %>%
html_nodes("a#next") %>%
length() %>%
{. > 0}
actor_name <- res %>% html_nodes("div.photo-info") %>% html_nodes("span.pb10") %>% html_text()
movies_and_dates <- res %>%
html_nodes("date")
movies <- movies_and_dates[seq(1, length(movies_and_dates), 2)] %>%
html_text()
dates <- movies_and_dates[seq(2, length(movies_and_dates), 2)] %>%
html_text()
dat <- tibble(
actress = actor_name,
id = movies,
date = ymd(dates)
)
if (has_next) {
dat <- bind_rows(
dat,
get_page_movies(id, page + 1)
)
}
dat %>% separate_rows(actress, sep = ", ")
}
x <- get_page_movies
x
x <- get_page_movies()
x
javbus_list <- tribble(
~actor_id, ~actor_name,
"okq", "三上悠亜",
"1ny", "明日花キララ",
"2xi", "葵つかさ",
"pmv", "橋本ありな",
"1kz", "かすみ果穂",
"mk0", "桃谷エリカ",
"rsv", "岬ななみ",
"m54", "林ゆな",
"6ak", "天海つばさ",
"rki", "君島みお",
"tcv", "坂口みほの",
"u4m", "楓カレン",
"pw2", "高橋しょう子",
"9ns", "吉川あいみ",
"wgs", "七ツ森りり",
"2di", "友田彩也香",
"9mi", "古川いおり"
)
actor_movies <- javbus_list$actor_id %>%
map_dfr(get_page_movies_from_javbus) %>%
left_join(my_movies, by = c("id" = "video"))
get_page_movies_from_javbus <- function(id, page = 1) {
main_page <- paste0("https://www.javbus.com/star/", id)
if (page == 1) {
url <- main_page
} else {
url <- paste0(main_page, "/", page)
}
res <- read_html(url)
has_next <- res %>%
html_nodes("a#next") %>%
length() %>%
{. > 0}
actor_name <- res %>% html_nodes("div.photo-info") %>% html_nodes("span.pb10") %>% html_text()
movies_and_dates <- res %>%
html_nodes("date")
movies <- movies_and_dates[seq(1, length(movies_and_dates), 2)] %>%
html_text()
dates <- movies_and_dates[seq(2, length(movies_and_dates), 2)] %>%
html_text()
dat <- tibble(
actress = actor_name,
id = movies,
date = ymd(dates)
)
if (has_next) {
dat <- bind_rows(
dat,
get_page_movies(id, page + 1)
)
}
dat %>% separate_rows(actress, sep = ", ")
}
actor_movies <- javbus_list$actor_id %>%
map_dfr(get_page_movies_from_javbus) %>%
left_join(my_movies, by = c("id" = "video"))
actor_movies %>% nrow
actor_movies %>%
select(-title) %>%
arrange(desc(date)) %>%
print(n = 100)
actor_movies %>%
arrange(desc(date)) %>%
print(n = 100)
library(nlme)
data(oats)
library(nlme)
data("Oats")
Oats
?Oats
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
library(tidyverse)
library(googlesheets4)
library(lubridate)
library(rvest)
library(httr)
library(magrittr)
main_folder <- "/Volumes/Element 1/jav/JAV_output"
folders <- list.files(main_folder)
get_videos <- function(f) {
tibble(
actress = f,
video = tools::file_path_sans_ext(
list.files(file.path(main_folder, f), pattern = "nfo")
)
)
}
my_movies <- map_dfr(folders, get_videos)
my_movies %<>%
mutate(has_subtitle = str_detect(video, "-[cC]")) %>%
mutate(video = str_replace_all(video, "-[cC]", ""))
my_movies <- separate_rows(my_movies, actress, sep = ",")
nrow(my_movies)
my_movies %>% count(actress) %>% arrange(desc(n)) %>% print(n=100)
get_page_movies_from_javbus <- function(id, page = 1) {
main_page <- paste0("https://www.javbus.com/star/", id)
if (page == 1) {
url <- main_page
} else {
url <- paste0(main_page, "/", page)
}
res <- read_html(url)
has_next <- res %>%
html_nodes("a#next") %>%
length() %>%
{. > 0}
actor_name <- res %>% html_nodes("div.photo-info") %>% html_nodes("span.pb10") %>% html_text()
movies_and_dates <- res %>%
html_nodes("date")
movies <- movies_and_dates[seq(1, length(movies_and_dates), 2)] %>%
html_text()
dates <- movies_and_dates[seq(2, length(movies_and_dates), 2)] %>%
html_text()
dat <- tibble(
actress = actor_name,
id = movies,
date = ymd(dates)
)
if (has_next) {
dat <- bind_rows(
dat,
get_page_movies_from_javbus(id, page + 1)
)
}
dat %>% separate_rows(actress, sep = ", ")
}
get_page_movies_from_javdb <- function(id, page = 1) {
main_page <- paste0("https://javdb.com/actors/", id)
param_sdc <- "t=s,d,c"
if (page == 1) {
url <- paste0(main_page, "?", param_sdc)
} else {
url <- paste0(main_page, "?page=", page, "&", param_sdc)
}
res <- read_html(url)
has_next <- res %>%
html_nodes(".pagination-list") %>%
html_nodes("a[rel=next]") %>%
length() %>%
{. > 0}
actor_name <- res %>% html_nodes(".actor-section-name") %>% html_text()
movies <- res %>%
html_nodes(".column.grid-item")
dat <- tibble(
actress = actor_name,
id = html_text(html_nodes(movies, ".uid")),
date = ymd(str_trim(html_text(html_nodes(movies, ".meta")))),
title = html_text(html_nodes(movies, ".video-title"))
)
if (has_next) {
dat <- bind_rows(
dat,
get_page_movies(id, page + 1)
)
}
dat %>% separate_rows(actress, sep = ", ")
}
httr::set_config(httr::user_agent("Mozilla/5.0 (Macintosh; Intel Mac OS X 11_2_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36"))
javdb_list <- tribble(
~actor_id, ~actor_name,
"Av2e", "三上悠亜",
"wm9B", "明日花キララ",
"A5yq", "葵つかさ",
"RJM8", "橋本ありな",
"MqQQ", "かすみ果穂",
"gwE", "桃谷エリカ",
"QNen", "岬ななみ",
"qPer", "林ゆな",
"N4YG", "天海つばさ",
"96AR", "君島みお",
"DNb3", "坂口みほの",
"kzx6", "楓カレン",
"x4MV", "高橋しょう子",
"5Xx6", "吉川あいみ",
"Ewa2", "七ツ森りり",
"dENv", "友田彩也香",
"Y8Mx", "古川いおり"
)
javbus_list <- tribble(
~actor_id, ~actor_name,
"okq", "三上悠亜",
"1ny", "明日花キララ",
"2xi", "葵つかさ",
"pmv", "橋本ありな",
"1kz", "かすみ果穂",
"mk0", "桃谷エリカ",
"rsv", "岬ななみ",
"m54", "林ゆな",
"6ak", "天海つばさ",
"rki", "君島みお",
"tcv", "坂口みほの",
"u4m", "楓カレン",
"pw2", "高橋しょう子",
"9ns", "吉川あいみ",
"wgs", "七ツ森りり",
"2di", "友田彩也香",
"9mi", "古川いおり",
"300", "里美ゆりあ",
"vkq", "安齋らら",
"vnf", "メロディー・雛・マークス",
"2eg", "吉沢明歩",
"4xe", "冬月かえで"
)
actor_movies <- javdb_list$actor_id %>%
map_dfr(get_page_movies_from_javdb) %>%
left_join(my_movies, by = c("id" = "video"))
actor_movies <- javbus_list$actor_id %>%
map_dfr(get_page_movies_from_javbus) %>%
left_join(my_movies, by = c("id" = "video"))
actor_movies %>%
arrange(desc(date)) %>%
# filter(actress.x == "楓カレン")
print(n = 100)
blogdown:::preview_site()
choose(13,3)-choose(13,2)*choose(11,1)+choose(13,1)*choose(12,2)
choose(13,2)-choose(13,1)*choose(12,1)
G <- function(r, k, n) {
choose(r, k) * choose(4*r-4*k, n-4*k) / choose(4*r, n)
}
F <- function(n, r) {
if (n <= 3) {
return(0)
}
res <- vector(mode = "numeric", length = r)
for (i in seq(r)) {
res[i] <- G(r, i, n) * (1 - F(n-4*i, r-i))
}
sum(res)
}
library(tibble)
library(ggplot2)
library(purrr)
library(scales)
library(tidyr)
library(dplyr)
library(parallel)
library(xfun)
theme_set(theme_minimal())
map_dbl(0:28, ~F(.x, r = 13))
blogdown:::preview_site()
df.sim
blogdown:::preview_site()
blogdown:::preview_site()
??facet_wrap
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
choose(13,3)
choose(13,3) - choose(13,2)*choose(11,1) + choose(13,1)*choose(12,2)
setwd("~/github/tarnortalon/streeling")
blogdown:::preview_site()
blogdown:::serve_site()
setwd("~/github/tarnortalon/streeling")
blogdown:::preview_site()
